/**
 * Remove the tabs from Woocommerce
 */
function woo_remove_product_tabs( $tabs ) {
	unset( $tabs['description'] ); // Remove the description tab
	unset( $tabs['reviews'] ); // Remove the reviews tab
	unset( $tabs['additional_information'] ); // Remove the additional information tab
	return $tabs;
}
add_filter( 'woocommerce_product_tabs', 'woo_remove_product_tabs', 98 );
  
/**
 * Remove cart
 */
function remove_woocommerce_add_to_cart_button() {
	remove_action( 'woocommerce_after_shop_loop_item', 'woocommerce_template_loop_add_to_cart', 10 );
	remove_action( 'woocommerce_single_product_summary', 'woocommerce_template_single_add_to_cart', 30 );
	remove_action( 'woocommerce_simple_add_to_cart', 'woocommerce_simple_add_to_cart', 30 );
	remove_action( 'woocommerce_grouped_add_to_cart', 'woocommerce_grouped_add_to_cart', 30 );
	remove_action( 'woocommerce_variable_add_to_cart', 'woocommerce_variable_add_to_cart', 30 );
	remove_action( 'woocommerce_external_add_to_cart', 'woocommerce_external_add_to_cart', 30 );
	remove_action( 'woocommerce_single_variation', 'woocommerce_single_variation', 10 );
	remove_action( 'woocommerce_single_variation', 'woocommerce_single_variation_add_to_cart_button', 20 );
}
add_action( 'init', 'remove_woocommerce_add_to_cart_button' );
  
/**
 * Get price
 */ 
  $product->get_price_html();
  /* With loop */
  <?php
    global $woocommerce;
    $currency = get_woocommerce_currency_symbol();
    $price = get_post_meta( get_the_ID(), '_regular_price', true);
    $sale = get_post_meta( get_the_ID(), '_sale_price', true);
  ?>
  <?php if($sale) : ?>
    <p class="product-price-tickr"><del><?php echo $currency; echo $price; ?></del> <?php echo $currency; echo $sale; ?></p>    
  <?php elseif($price) : ?>
    <p class="product-price-tickr"><?php echo $currency; echo $price; ?></p>    
  <?php endif; ?>
  
/**
 * SKU
 */  
 $product->get_sku();
 
/**
 * ID
 */
 $product->get_id();

/**
 * Custom checkout field Woocommerce
 */
function custom_remove_woo_checkout_fields( $fields ) {
	// remove billing fields
	unset($fields['billing']['billing_first_name']);
	unset($fields['billing']['billing_last_name']);
	unset($fields['billing']['billing_company']);
	unset($fields['billing']['billing_address_1']);
	unset($fields['billing']['billing_address_2']);
	unset($fields['billing']['billing_city']);
	unset($fields['billing']['billing_postcode']);
	unset($fields['billing']['billing_country']);
	unset($fields['billing']['billing_state']);
	unset($fields['billing']['billing_phone']);
	unset($fields['billing']['billing_email']);

	// remove shipping fields 
	unset($fields['shipping']['shipping_first_name']);    
	unset($fields['shipping']['shipping_last_name']);  
	unset($fields['shipping']['shipping_company']);
	unset($fields['shipping']['shipping_address_1']);
	unset($fields['shipping']['shipping_address_2']);
	unset($fields['shipping']['shipping_city']);
	unset($fields['shipping']['shipping_postcode']);
	unset($fields['shipping']['shipping_country']);
	unset($fields['shipping']['shipping_state']);

	// remove order comment fields
	unset($fields['order']['order_comments']);

	return $fields;
}
add_filter( 'woocommerce_checkout_fields' , 'custom_remove_woo_checkout_fields' );

function override_billing_checkout_fields( $fields ) {
	$fields['billing']['billing_phone']['placeholder'] = 'Telefon';
	$fields['billing']['billing_phone']['placeholder'] = 'Email';
	return $fields;
}
add_filter( 'woocommerce_checkout_fields' , 'override_billing_checkout_fields', 20, 1 );
  
/**
 * Add a custom product data tab
 */
function woo_new_product_tab( $tabs ) {
	$tabs['test_tab'] = array(
	'title' 	=> __( 'New Product Tab', 'woocommerce' ),
	'priority' 	=> 50,
	'callback' 	=> 'woo_new_product_tab_content'
);
return $tabs;
}
add_filter( 'woocommerce_product_tabs', 'woo_new_product_tab' );
function woo_new_product_tab_content() {
	echo '<h2>New Product Tab</h2>';
	echo '<p>Here\'s your new product tab.</p>';
}

/**
 * Change symbol VND
 */
function change_existing_currency_symbol( $currency_symbol, $currency ) {
	switch( $currency ) {
		case 'VND': $currency_symbol = 'VNĐ'; break;
	}
	return $currency_symbol;
}
add_filter('woocommerce_currency_symbol', 'change_existing_currency_symbol', 10, 2);

/**
 * Custom taxonomy product
 */
add_action( 'init', 'custom_taxonomy_Item' );
function custom_taxonomy_Item()  {
$labels = array(
    'name'                       => 'Items',
    'singular_name'              => 'Item',
    'menu_name'                  => 'Item',
    'all_items'                  => 'All Items',
    'parent_item'                => 'Parent Item',
    'parent_item_colon'          => 'Parent Item:',
    'new_item_name'              => 'New Item Name',
    'add_new_item'               => 'Add New Item',
    'edit_item'                  => 'Edit Item',
    'update_item'                => 'Update Item',
    'separate_items_with_commas' => 'Separate Item with commas',
    'search_items'               => 'Search Items',
    'add_or_remove_items'        => 'Add or remove Items',
    'choose_from_most_used'      => 'Choose from the most used Items',
);
$args = array(
    'labels'                     => $labels,
    'hierarchical'               => true,
    'public'                     => true,
    'show_ui'                    => true,
    'show_admin_column'          => true,
    'show_in_nav_menus'          => true,
    'show_tagcloud'              => true,
);
register_taxonomy( 'item', 'product', $args );
register_taxonomy_for_object_type( 'item', 'product' );
}

/* Get Taxonomy custom */
$taxonomy_slug = "brands";
  $terms = get_the_terms( $id, $taxonomy_slug );
  if ( !empty( $terms ) ) {
    foreach ( $terms as $term ) {
      $out[] = '<a href="'. get_term_link( $term->slug, $taxonomy_slug ) .'">'. $term->name. "</a>";
    }
    echo implode(', ', $out );
  }
